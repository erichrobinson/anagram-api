let isProper,sortByLetter;_cca‍.x([["deleteWord",()=>deleteWord],["getAnagrams",()=>getAnagrams],["getStats",()=>getStats],["insertWords",()=>insertWords]]);_cca‍.w("./utilities/helpers",[["isProper",["isProper"],function(v){isProper=v}],["sortByLetter",["sortByLetter"],function(v){sortByLetter=v}]]);

       async function deleteWord(collection, word, deleteAnagrams = false) {
  let result

  if(deleteAnagrams) {
    result = await collection.deleteMany({ sorted: sortByLetter(word) })
  } else {
    result = await collection.deleteOne({ word })
  }

  return result
}

       async function getAnagrams(collection, word) {
  const anagrams = await collection.find({
    word: { $ne: word },
    sorted: sortByLetter(word)
  }).toArray()

  return anagrams.map(record => record.word)
}

async function getMedianWordLength(collection, wordCount) {
  const sorted = await collection.find().sort( { length: 1 } ).toArray()
  const middleIndex = wordCount / 2
  let median
  
  if(wordCount % 2 === 0) {
    median = (sorted[middleIndex].length + sorted[middleIndex + 1].length) / 2
  } else {
    median = sorted[Math.round(middleIndex)]
  }

  return median
}

       async function getStats(collection) {
  const stats = {}
  const aggregateData = await collection.aggregate([{
    $group: {
      _id: null,
      average: {
        $avg: '$length',
      },
      min: {
        $min: '$length',
      },
      max: {
        $max: '$length'
      }
    }
  }]).toArray()

  stats.numberOfWords = await collection.countDocuments();
  stats.averageWordLength = +aggregateData[0].average.toFixed(1)
  stats.minWordLength = aggregateData[0].min
  stats.maxWordLength = aggregateData[0].max
  stats.medianWordLength = await getMedianWordLength(collection, stats.numberOfWords)
  
  return stats
}

       async function insertWords(collection, words) {
  const wordsToAdd = words.map(word => {
    return {
      word: word,
      sorted: sortByLetter(word),
      isProper: isProper(word)
    }
  })
  
  return await collection.insertMany(wordsToAdd)
}